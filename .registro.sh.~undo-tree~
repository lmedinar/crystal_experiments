(undo-tree-save-format-version . 1)
"6224b9af797039b4a59347bae797761055a91d49"
[nil nil nil nil (26683 52663 166242 546000) 0 nil]
([nil nil ((nil rear-nonsticky nil 496 . 497) (nil fontified nil 1 . 497) (1 . 497) (t 26683 52595 532927 885000)) nil (26683 52663 166241 80000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -482) (undo-tree-id0 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -483) (undo-tree-id1 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -484) (undo-tree-id2 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -485) (undo-tree-id3 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -486) (undo-tree-id4 . -1) 487) nil (26683 52663 166238 184000) 0 nil])
([nil nil ((482 . 489)) nil (26683 52663 166212 340000) 0 nil])
([nil nil ((499 . 500) 489) nil (26683 52663 166206 402000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -435) (undo-tree-id23 . -1) (#("$" 0 1 (face font-lock-string-face fontified t)) . -436) (undo-tree-id24 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -437) (undo-tree-id25 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -438) (undo-tree-id26 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -439) (undo-tree-id27 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -440) (undo-tree-id28 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -441) (undo-tree-id29 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -442) (undo-tree-id30 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -443) (undo-tree-id31 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -444) (undo-tree-id32 . -1) 445 (t 26683 52663 192386 831000)) nil (26683 52759 97249 619000) 0 nil])
([nil nil ((435 . 436)) nil (26683 52759 97166 903000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -453) (undo-tree-id6 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -454) (undo-tree-id7 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -455) (undo-tree-id8 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -456) (undo-tree-id9 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -457) (undo-tree-id10 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -458) (undo-tree-id11 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -459) (undo-tree-id12 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -460) (undo-tree-id13 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -461) (undo-tree-id14 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -462) (undo-tree-id15 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -463) (undo-tree-id16 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -464) (undo-tree-id17 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -465) (undo-tree-id18 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -466) (undo-tree-id19 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -467) (undo-tree-id20 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -468) (undo-tree-id21 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -469) (undo-tree-id22 . -1) 470) nil (26683 52759 97163 362000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-string-face fontified t)) . -452) (undo-tree-id5 . -1) 453) nil (26683 52759 97115 293000) 0 nil])
([nil current ((452 . 459)) nil (26683 52759 97098 274000) 0 nil])
nil
